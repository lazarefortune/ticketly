:root {
  --red: #f25353;
  --yellow: #feb32b;
  --green: #41cf7c;
  --blue: #4869ee;
}

@function space($factor) {
  $base-value: 4px;
  @return $base-value * $factor;
}

// Alerts
// ==================
.alert {
  @apply bg-white border border-[#e6e6e6] shadow-custom rounded flex items-center relative border-b-[3px] border-b-[#e6e6e6] text-slate-900
        dark:bg-slate-800 dark:border dark:border-slate-700 dark:text-white dark:border-b-[3px];
  transition: 0.3s;
  margin: space(5) auto;
  padding: space(4);
  width: 100%;
  animation: alertIn 0.5s both;
  line-height: 1.2;

  a {
    text-decoration: underline;
  }

  a:hover {
    text-decoration: none;
  }
}

.alert strong {
  font-weight: bold;
}

.alert.out {
  animation: alertOut 0.5s both;
}

.alert > svg:first-child {
  flex: none;
  width: 20px;
  height: 20px;
  margin-right: space(2);
}

.alert .alert-close {
  @apply text-slate-900;
  width: 30px;
  flex: none;
  margin-left: auto;
  margin-right: 0;
  opacity: 0.3;
  cursor: pointer;
  transition: opacity 0.3s;

  &:hover {
    opacity: 0.5;
  }
}

.alert-close svg {
  width: 20px;
  height: 20px;
  color: #000 !important;
  //@apply text-slate-900 dark:text-white;
}

.dark .alert-close svg {
  color: #fff !important;
}

.alert-danger {
  //border-bottom-color: var(--red);

  @apply border-b-red-500 dark:border-b-red-500;

  svg:first-child {
    //color: var(--red);
    @apply text-red-500 dark:text-red-500;
  }
}

.alert-success {
  @apply border-b-green-500 dark:border-b-green-500;

  svg:first-child {
    @apply text-green-500 dark:text-green-500;
  }
}

.alert-info {
  border-bottom-color: var(--blue);

  svg:first-child {
    color: var(--blue);
  }
}

.alert-warning {
  border-bottom-color: var(--yellow);

  svg:first-child {
    color: var(--yellow);
  }
}

.alert-progress {
  @apply bg-white;
  height: 3px;
  position: absolute;
  bottom: -3px;
  right: 0;
  width: 100%;
  z-index: 3;
  transform-origin: 0 100%;
  animation: alertDuration 2s linear both;
}

@keyframes alertIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0px);
  }
}

@keyframes alertOut {
  from {
    opacity: 1;
    transform: translateY(0px);
  }
  to {
    opacity: 0;
    transform: translateY(-10px);
  }
}

@keyframes alertDuration {
  from {
    transform: scaleX(0);
  }
  to {
    transform: scaleX(1);
  }
}

.is-floating .alert,
.alert.is-floating {
  @apply shadow-custom;
  position: fixed;
  top: 20px;
  right: 20px;
  max-width: 370px;
  z-index: 3000;
}

@media (max-width: 767px) {
  .is-floating .alert,
  .alert.is-floating {
    top: 5px;
    right: 5px;
    max-width: 350px;
  }
}

.alert {
  @apply border-t-[#e6e6e6] border-x-[#e6e6e6];
}